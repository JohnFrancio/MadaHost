# Upstream definitions
upstream backend_api {
    server api:3001;
    keepalive 32;
}

upstream frontend_app {
    server frontend:80;
    keepalive 32;
}

# Redirection HTTP vers HTTPS
server {
    listen 80;
    server_name madahost.me www.madahost.me api.madahost.me;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Frontend - madahost.me
server {
    listen 443 ssl http2;
    server_name madahost.me www.madahost.me;

    ssl_certificate /etc/letsencrypt/live/madahost.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/madahost.me/privkey.pem;

    add_header Strict-Transport-Security "max-age=31536000" always;

    location / {
        proxy_pass http://frontend_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Backend API - api.madahost.me
server {
    listen 443 ssl http2;
    server_name api.madahost.me;

    ssl_certificate /etc/letsencrypt/live/madahost.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/madahost.me/privkey.pem;

    add_header Strict-Transport-Security "max-age=31536000" always;

    # ⚠️ NE PAS ajouter de headers CORS ici, Express s'en occupe
    # Mais on doit PASSER les headers correctement

    location / {
        # Passer la requête au backend
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        
        # Headers essentiels pour CORS
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # ✅ CRITIQUE pour les cookies cross-domain
        proxy_set_header Origin $http_origin;
        
        # Pas de cache pour l'API
        proxy_cache_bypass $http_upgrade;
        add_header Cache-Control "no-store" always;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # WebSocket
    location /ws {
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 86400;
    }
}