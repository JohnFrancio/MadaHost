# Configuration principale pour madahost.me
server {
    listen 80;
    server_name madahost.me www.madahost.me;
    
    # Redirection vers HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name madahost.me www.madahost.me;

    # Certificats SSL (à générer avec Certbot)
    ssl_certificate /etc/letsencrypt/live/madahost.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/madahost.me/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Headers de sécurité
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Configuration CORS pour l'API
    location /api {
        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://madahost.me' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Cookie, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Set-Cookie' always;

        # Gérer les préflight OPTIONS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://madahost.me' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Cookie, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass http://api:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Important pour les sessions
        proxy_set_header X-Forwarded-Host $host;
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=Lax";
    }

    # WebSocket pour les déploiements en temps réel
    location /ws {
        proxy_pass http://api:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    # Serveur statique pour les projets déployés
    location ~ ^/project/(?<project_id>[^/]+)/(?<project_path>.*)$ {
        root /var/www/deployed;
        try_files /$project_id/$project_path /$project_id/$project_path/ /$project_id/index.html =404;
        
        # CORS pour les projets
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    }

    # Frontend React
    location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Cache pour les assets statiques
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Health checks
    location /health {
        proxy_pass http://api:3001/api/health;
        access_log off;
    }
}

# Serveur pour les projets en sous-domaines
server {
    listen 80;
    server_name "~^(?<subdomain>[a-zA-Z0-9-]+)\.madahost\.me$";
    
    # Redirection vers HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name "~^(?<subdomain>[a-zA-Z0-9-]+)\.madahost\.me$";

    ssl_certificate /etc/letsencrypt/live/madahost.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/madahost.me/privkey.pem;

    root /var/www/deployed/$subdomain;
    index index.html index.htm;

    # Servir les fichiers statiques
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers CORS pour les projets
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    }

    # Bloc pour les requêtes OPTIONS
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}