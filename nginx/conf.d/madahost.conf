# nginx/conf.d/madahost.conf - CONFIGURATION COMPLÈTE

# ========================================
# 1. API Backend (api.madahost.me)
# ========================================
server {
    listen 80;
    server_name api.madahost.me;

    # Redirection HTTP vers HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.madahost.me;

    # SSL
    ssl_certificate /etc/letsencrypt/live/madahost.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/madahost.me/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logs
    access_log /var/log/nginx/api-access.log;
    error_log /var/log/nginx/api-error.log;

    # Proxy vers l'API
    location / {
        proxy_pass http://api:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # WebSocket
    location /ws {
        proxy_pass http://api:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts pour WebSocket
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }
}

# ========================================
# 2. Frontend principal (madahost.me & www.madahost.me)
# ========================================
server {
    listen 80;
    server_name madahost.me www.madahost.me;
    return 301 https://madahost.me$request_uri;
}

server {
    listen 443 ssl http2;
    server_name www.madahost.me;
    
    ssl_certificate /etc/letsencrypt/live/madahost.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/madahost.me/privkey.pem;
    
    return 301 https://madahost.me$request_uri;
}

server {
    listen 443 ssl http2;
    server_name madahost.me;

    # SSL
    ssl_certificate /etc/letsencrypt/live/madahost.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/madahost.me/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logs
    access_log /var/log/nginx/frontend-access.log;
    error_log /var/log/nginx/frontend-error.log;

    # Proxy vers le frontend
    location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# ========================================
# 3. Sites déployés (*.madahost.me)
# ========================================
server {
    listen 80;
    server_name ~^(?<subdomain>.+)\.madahost\.me$;

    # Exclure les sous-domaines réservés
    if ($subdomain ~* ^(www|api)$) {
        return 444;
    }

    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name ~^(?<subdomain>.+)\.madahost\.me$;

    # Exclure les sous-domaines réservés
    if ($subdomain ~* ^(www|api)$) {
        return 444;
    }

    # SSL (certificat wildcard)
    ssl_certificate /etc/letsencrypt/live/madahost.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/madahost.me/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # ✅ Document root dynamique basé sur le sous-domaine
    root /var/www/deployed/$subdomain;
    index index.html index.htm;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logs par site
    access_log /var/log/nginx/sites-access.log combined;
    error_log /var/log/nginx/sites-error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/xml+rss application/json
               image/svg+xml;

    # SPA fallback (essayer le fichier, sinon fallback vers index.html)
    location / {
        try_files $uri $uri/ /index.html =404;
    }

    # Cache pour les assets statiques
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Try different locations for assets
        try_files $uri /assets$uri =404;
    }

    # Dossier assets alternatif
    location /assets/ {
        alias /var/www/deployed/$subdomain/assets/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Bloquer l'accès aux fichiers sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.deployment\.json$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Page 404 personnalisée
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Page 50x personnalisée
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# ========================================
# 4. Certbot (renouvellement SSL)
# ========================================
server {
    listen 80;
    server_name _;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}