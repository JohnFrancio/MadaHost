version: '3.8'

services:
  # Backend API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: always
    container_name: madahost_api
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ./backend/.env.production
    volumes:
      - ./backend/logs:/app/logs
      - deployed_projects:/app/deployed_projects
      - build_cache:/app/build_cache
    networks:
      - madahost_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (build statique servi par Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: always
    container_name: madahost_frontend
    networks:
      - madahost_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: always
    container_name: madahost_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - deployed_projects:/var/www/deployed:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - madahost_network
    depends_on:
      - api
      - frontend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot pour SSL
  certbot:
    image: certbot/certbot
    container_name: madahost_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - madahost_network

volumes:
  deployed_projects:
    driver: local
  build_cache:
    driver: local
  nginx_cache:
    driver: local

networks:
  madahost_network:
    driver: bridge